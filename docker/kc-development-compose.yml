# This yaml file starts the basic microservices for the Reefer Container Shipment reference implementation
# These microservices are meant to run with a local backbone as no SSL or certificates are expected

version: '3'
services:
    simulator:
        image: ibmcase/kcontainer-fleet-ms:test
        hostname: fleetms
        ports:
            - "9080:9080"
            - "9443:9443"
        environment:
            KAFKA_ENV: ${KAFKA_ENV:-LOCAL}
            KAFKA_BROKERS: ${KAFKA_BROKERS:-kafka1:9092}
            KAFKA_APIKEY: ${KAFKA_APIKEY}
    web:
        image: ibmcase/kcontainer-ui:test
        hostname: kcsolution
        ports:
            - "3010:3010"
        environment:
            KAFKA_ENV: ${KAFKA_ENV:-LOCAL}
            KAFKA_BROKERS: ${KAFKA_BROKERS:-kafka1:9092}
            KAFKA_APIKEY: ${KAFKA_APIKEY}
            FLEET_MS_URL: http://simulator:9080/fleetms
            ORDER_MS_URL: http://ordercmd:9080/orders
            ORDER_QUERY_MS_URL: http://orderquery:9080/orders
        depends_on:
            - simulator
            - ordercmd
            - orderquery
            - voyages
    ordercmd:
        image: ibmcase/kcontainer-order-command-ms:test
        hostname: ordercmd
        ports:
            - "10080:9080"
        environment:
            KAFKA_ENV: ${KAFKA_ENV}
            KAFKA_BROKERS: ${KAFKA_BROKERS:-kafka1:9092}
            KAFKA_APIKEY: ${KAFKA_APIKEY}
    orderquery:
        image: ibmcase/kcontainer-order-query-ms:test
        hostname: orderquery
        ports:
            - "11080:9080"
        environment:
            KAFKA_APIKEY: ${KAFKA_APIKEY}
            KAFKA_ENV: ${KAFKA_ENV:-LOCAL}
            KAFKA_BROKERS: ${KAFKA_BROKERS}
    voyages:
        image: ibmcase/kcontainer-voyages-ms:test
        hostname: voyages
        ports:
            - "3100:3000"
        environment:
            KAFKA_APIKEY: ${KAFKA_APIKEY}
            KAFKA_ENV: ${KAFKA_ENV:-LOCAL}
            KAFKA_BROKERS: ${KAFKA_BROKERS}
    springcontainerms:
        image: ibmcase/kcontainer-spring-container-ms:test
        hostname: springcontainerms
        ports:
            - "12081:8080"
        environment:
            BPM_ANOMALY: ${BPM_ANOMALY:-https://postman-echo.com/status/404}
            KAFKA_APIKEY: ${KAFKA_APIKEY}
            KAFKA_ENV: ${KAFKA_ENV:-LOCAL}
            KAFKA_BROKERS: ${KAFKA_BROKERS:-kafka1:9092}
            POSTGRESQL_URL: ${POSTGRESQL_URL:-jdbc:postgresql://postgresql1:5432/postgres}
            POSTGRESQL_USER: ${POSTGRESQL_USER:-postgres}
            POSTGRESQL_PWD: ${POSTGRESQL_PWD:-supersecret}
            POSTGRESQL_CA_PEM: ${POSTGRESQL_CA_PEM}
            LOGGING_CONTAINER_MS_ROOT: ${LOGGING_CONTAINER_MS_ROOT:-INFO}
            LOGGING_CONTAINER_MS_CONSUMER_CONFIG: ${LOGGING_CONTAINER_MS_CONSUMER_CONFIG:-ERROR}
            LOGGING_CONTAINER_MS_PRODUCER_CONFIG: ${LOGGING_CONTAINER_MS_PRODUCER_CONFIG:-ERROR}

