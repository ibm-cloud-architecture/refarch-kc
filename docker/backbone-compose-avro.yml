# wurstmeister
version: '3'
services:
    zookeeper:
        image: bitnami/zookeeper
        hostname: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_PORT: 2181
            ZOO_SERVERS: server.1=zookeeper:2888:3888
            ALLOW_ANONYMOUS_LOGIN: "yes"
        volumes:
            - ./zookeeper-data/data:/data
            - ./zookeeper-data/datalog:/datalog
    kafka:
        image: bitnami/kafka
        hostname: kafka
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: kafka
            KAFKA_ADVERTISED_PORT: 9092
            ALLOW_PLAINTEXT_LISTENER: "yes"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes:
            - ./kafka-data/data:/var/lib/kafka/data
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - zookeeper
    postgresql:
        image: postgres
        hostname: postgres
        restart: always
        ports:
            - "5432:5432"
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: supersecret
    schemaregistry:
        image: confluentinc/cp-schema-registry
        hostname: schemaregistry
        restart: always
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
            SCHEMA_REGISTRY_HOST_NAME: schemaregistry
            SCHEMA_REGISTRY_DEBUG: "true"
        depends_on:
            - zookeeper